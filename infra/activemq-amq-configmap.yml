kind: ConfigMap
apiVersion: v1
metadata:
  name: amq
  namespace: scot
data:
  jetty.xml: "<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n    <bean id=\"securityLoginService\" class=\"org.eclipse.jetty.security.HashLoginService\">\n        <property name=\"name\" value=\"ActiveMQRealm\" />\n        <property name=\"config\" value=\"${activemq.conf}/jetty-realm.properties\" />\n    </bean>\n\n    <bean id=\"securityConstraint\" class=\"org.eclipse.jetty.util.security.Constraint\">\n        <property name=\"name\" value=\"BASIC\" />\n        <property name=\"roles\" value=\"user,admin\" />\n        <!-- set authenticate=false to disable login -->\n        <property name=\"authenticate\" value=\"true\" />\n    </bean>\n    <bean id=\"adminSecurityConstraint\" class=\"org.eclipse.jetty.util.security.Constraint\">\n        <property name=\"name\" value=\"BASIC\" />\n        <property name=\"roles\" value=\"admin\" />\n        <!-- set authenticate=false to disable login -->\n        <property name=\"authenticate\" value=\"true\" />\n    </bean>\n    <bean id=\"securityConstraintMapping\" class=\"org.eclipse.jetty.security.ConstraintMapping\">\n        <property name=\"constraint\" ref=\"securityConstraint\" />\n        <property name=\"pathSpec\" value=\"/api/*,/admin/*,*.jsp\" />\n    </bean>\n    <bean id=\"adminSecurityConstraintMapping\" class=\"org.eclipse.jetty.security.ConstraintMapping\">\n        <property name=\"constraint\" ref=\"adminSecurityConstraint\" />\n        <property name=\"pathSpec\" value=\"*.action\" />\n    </bean>\n    \n  <bean id=\"secHandlerCollection\" class=\"org.eclipse.jetty.server.handler.HandlerCollection\">\n    <property name=\"handlers\">\n      <list>\n        <bean class=\"org.eclipse.jetty.webapp.WebAppContext\">\n          <property name=\"contextPath\" value=\"/admin\" />\n          <property name=\"resourceBase\" value=\"${activemq.home}/webapps/admin\" />\n          <property name=\"logUrlOnStart\" value=\"true\" />\n        </bean>\n        <!-- Enable embedded file server for Blob messages -->\n        <!-- <bean class=\"org.eclipse.jetty.webapp.WebAppContext\"> <property name=\"contextPath\" \n          value=\"/fileserver\" /> <property name=\"resourceBase\" value=\"${activemq.home}/webapps/fileserver\" \n          /> <property name=\"logUrlOnStart\" value=\"true\" /> <property name=\"parentLoaderPriority\" \n          value=\"true\" /> </bean> -->\n        <bean class=\"org.eclipse.jetty.webapp.WebAppContext\">\n          <property name=\"contextPath\" value=\"/api\" />\n          <property name=\"resourceBase\" value=\"${activemq.home}/webapps/api\" />\n          <property name=\"logUrlOnStart\" value=\"true\" />\n        </bean>\n                <bean class=\"org.eclipse.jetty.webapp.WebAppContext\">\n                    <property name=\"contextPath\" value=\"/scotaq\" />\n                    <property name=\"resourceBase\" value=\"${activemq.home}/webapps/scot\" />\n                    <property name=\"logUrlOnStart\" value=\"true\" />\n                </bean>\n        <bean class=\"org.eclipse.jetty.server.handler.ResourceHandler\">\n          <property name=\"directoriesListed\" value=\"false\" />\n          <property name=\"welcomeFiles\">\n            <list>\n              <value>index.html</value>\n            </list>\n          </property>\n          <property name=\"resourceBase\" value=\"${activemq.home}/webapps/\" />\n        </bean>\n        <bean id=\"defaultHandler\" class=\"org.eclipse.jetty.server.handler.DefaultHandler\">\n          <property name=\"serveIcon\" value=\"false\" />\n        </bean>\n      </list>\n    </property>\n  </bean>    \n    <bean id=\"securityHandler\" class=\"org.eclipse.jetty.security.ConstraintSecurityHandler\">\n        <property name=\"loginService\" ref=\"securityLoginService\" />\n        <property name=\"authenticator\">\n            <bean class=\"org.eclipse.jetty.security.authentication.BasicAuthenticator\" />\n        </property>\n        <property name=\"constraintMappings\">\n            <list>\n                <ref bean=\"adminSecurityConstraintMapping\" />\n                <ref bean=\"securityConstraintMapping\" />\n            </list>\n        </property>\n        <property name=\"handler\" ref=\"secHandlerCollection\" />\n    </bean>\n\n    <bean id=\"contexts\" class=\"org.eclipse.jetty.server.handler.ContextHandlerCollection\">\n    </bean>\n\n    <bean id=\"jettyPort\" class=\"org.apache.activemq.web.WebConsolePort\" init-method=\"start\">\n            <!-- the default port number for the web console -->\n        <property name=\"host\" value=\"0.0.0.0\"/>\n        <property name=\"port\" value=\"8161\"/>\n    </bean>\n\n    <bean id=\"Server\" depends-on=\"jettyPort\" class=\"org.eclipse.jetty.server.Server\"\n        destroy-method=\"stop\">\n\n        <property name=\"handler\">\n            <bean id=\"handlers\" class=\"org.eclipse.jetty.server.handler.HandlerCollection\">\n                <property name=\"handlers\">\n                    <list>\n                        <ref bean=\"contexts\" />\n                        <ref bean=\"securityHandler\" />\n                    </list>\n                </property>\n            </bean>\n        </property>\n\n    </bean>\n\n    <bean id=\"invokeConnectors\" class=\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\">\n      <property name=\"targetObject\" ref=\"Server\" />\n      <property name=\"targetMethod\" value=\"setConnectors\" />\n      <property name=\"arguments\">\n      <list>\n            <bean id=\"Connector\" class=\"org.eclipse.jetty.server.ServerConnector\">\n              <constructor-arg ref=\"Server\" />\n                    <!-- see the jettyPort bean -->\n                  <property name=\"host\" value=\"#{systemProperties['jetty.host']}\" />\n                  <property name=\"port\" value=\"#{systemProperties['jetty.port']}\" />\n              </bean>\n                <!--\n                    Enable this connector if you wish to use https with web console\n                -->\n                <!-- bean id=\"SecureConnector\" class=\"org.eclipse.jetty.server.ServerConnector\">\n          <constructor-arg ref=\"Server\" />\n          <constructor-arg>\n            <bean id=\"handlers\" class=\"org.eclipse.jetty.util.ssl.SslContextFactory\">\n            \n              <property name=\"keyStorePath\" value=\"${activemq.conf}/broker.ks\" />\n              <property name=\"keyStorePassword\" value=\"password\" />\n            </bean>\n          </constructor-arg>\n          <property name=\"port\" value=\"8162\" />\n        </bean -->\n            </list>\n      </property>\n    </bean>\n\n  <bean id=\"configureJetty\" class=\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\">\n    <property name=\"staticMethod\" value=\"org.apache.activemq.web.config.JspConfigurer.configureJetty\" />\n    <property name=\"arguments\">\n      <list>\n        <ref bean=\"Server\" />\n        <ref bean=\"secHandlerCollection\" />\n      </list>\n    </property>\n  </bean>\n    \n    <bean id=\"invokeStart\" class=\"org.springframework.beans.factory.config.MethodInvokingFactoryBean\" \n      depends-on=\"configureJetty, invokeConnectors\">\n      <property name=\"targetObject\" ref=\"Server\" />\n      <property name=\"targetMethod\" value=\"start\" />  \t\n    </bean>\n    \n    \n</beans>\n"
  scotamq.xml: |
    <beans
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:amq="http://activemq.apache.org/schema/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

        <!-- Allows us to use system properties as variables in this configuration file -->
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <value>file:${activemq.conf}/credentials.properties</value>
            </property>
        </bean>

        <!--
            The <broker> element is used to configure the ActiveMQ broker.
        -->
        <broker useJmx="true" xmlns="http://activemq.apache.org/schema/core" brokerName="localhost" dataDirectory="${activemq.data}">

            <!--
                For better performances use VM cursor and small memory limit.
                For more information, see:

                http://activemq.apache.org/message-cursors.html

                Also, if your producer is "hanging", it's probably due to producer flow control.
                For more information, see:
                http://activemq.apache.org/producer-flow-control.html
            -->

            <destinationPolicy>
                <policyMap>
                  <policyEntries>
                    <policyEntry topic=">" producerFlowControl="true">
                        <!-- The constantPendingMessageLimitStrategy is used to prevent
                            slow topic consumers to block producers and affect other consumers
                            by limiting the number of messages that are retained
                            For more information, see:

                            http://activemq.apache.org/slow-consumer-handling.html

                        -->
                      <pendingMessageLimitStrategy>
                        <constantPendingMessageLimitStrategy limit="1000"/>
                      </pendingMessageLimitStrategy>
                    </policyEntry>
                    <policyEntry queue=">" producerFlowControl="true" memoryLimit="1mb">
                      <!-- Use VM cursor for better latency
                          For more information, see:

                          http://activemq.apache.org/message-cursors.html

                      <pendingQueuePolicy>
                        <vmQueueCursor/>
                      </pendingQueuePolicy>
                      -->
                    </policyEntry>
                  </policyEntries>
                </policyMap>
            </destinationPolicy>


            <!--
                The managementContext is used to configure how ActiveMQ is exposed in
                JMX. By default, ActiveMQ uses the MBean server that is started by
                the JVM. For more information, see:

                http://activemq.apache.org/jmx.html
            -->
            <managementContext>
                <managementContext createConnector="false"/>
            </managementContext>

            <!--
                Configure message persistence for the broker. The default persistence
                mechanism is the KahaDB store (identified by the kahaDB tag).
                For more information, see:

                http://activemq.apache.org/persistence.html
            -->
            <persistenceAdapter>
                <kahaDB directory="${activemq.data}/kahadb"/>
            </persistenceAdapter>


              <!--
                The systemUsage controls the maximum amount of space the broker will
                use before slowing down producers. For more information, see:
                http://activemq.apache.org/producer-flow-control.html
                If using ActiveMQ embedded - the following limits could safely be used:

            <systemUsage>
                <systemUsage>
                    <memoryUsage>
                        <memoryUsage limit="20 mb"/>
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="1 gb"/>
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="100 mb"/>
                    </tempUsage>
                </systemUsage>
            </systemUsage>
            -->
              <systemUsage>
                <systemUsage>
                    <memoryUsage>
                        <memoryUsage limit="64 mb"/>
                    </memoryUsage>
                    <storeUsage>
                        <storeUsage limit="100 gb"/>
                    </storeUsage>
                    <tempUsage>
                        <tempUsage limit="50 gb"/>
                    </tempUsage>
                </systemUsage>
            </systemUsage>

            <!--
                The transport connectors expose ActiveMQ over a given protocol to
                clients and other brokers. For more information, see:

                http://activemq.apache.org/configuring-transports.html
            -->
            <transportConnectors>
                <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
                <transportConnector name="openwire" uri="tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600"/>
                <transportConnector name="amqp" uri="amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600"/>
                <transportConnector name="stomp" uri="stomp://0.0.0.0:61613"/>
            </transportConnectors>

            <!-- destroy the spring context on shutdown to stop jetty -->
            <shutdownHooks>
                <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
            </shutdownHooks>

        </broker>

        <!--
            Enable web consoles, REST and Ajax APIs and demos

            Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
        -->
        <import resource="jetty.xml"/>

    </beans>
